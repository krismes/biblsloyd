#uiocarpentry - torsdag og fredag

Git and github
Leon - uio

data storage - code - raw data
code is data

Github a service that uses Git
--

Version control - with Git
How to deal with several versions and tons of files colaborating with several people?

We don't want several files with different filenames -> one file several versions.
One filename - data inside split - tagged as different versions
Inside Git - a sequence of versions tracked - the user can jump back and forth between versions
--
https://git-scm.com/
sourcecode management

git is an app does something for you.
--
Git manages a directory
example: in a directory several files
readme.md (markdown)
worker.py (python)
docs.html

git - creates metadata on top of your data (hash - author - data)
hash - unique value for each version
--

Commit= data + metadata
Git records changes in time as commits

--
Commit 1 (data + metadata)
Commit 2 (data + metadata with relation to the previous commit)

Each commit stores the changes relative to the previous Commit.
--
Each commit has a commit message
- describe what you have done - important project metadata.
- a good commit message intro to the reader - adding value to the project
- collected in a commit log

---
The directory with files is called a REPOSITORY (Repo)
--
A series of commits collected in branches - a master branch
Experiments can be created on other branches -  choose to merge if want

--
Colloboration on servers
Sharing repos with each other
---

Remote repo hosting service

github
gitlab +++



